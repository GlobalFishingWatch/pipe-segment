name: main

on:
  push:
    branches: [master, develop]
  pull_request:

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: 3.8

      - name: Install flake8
        run: pip --disable-pip-version-check install flake8

      - name: Lint with flake8
        run: flake8 --count

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          # cache option make the step fail if you donÂ´t have requirements.txt or pyproject.toml on root.
          # https://github.com/actions/setup-python/issues/807.
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/test.txt
          pip install -e .
    
      - name: Test with pytest
        run: |
          make testintegration

      # Remove this step when this is done in tests-in-docker job.
      - name: Upload coverage reports to Codecov
        if: ${{ matrix.python-version == '3.8' }}
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

# Use this job when base docker image is not pulled from GFW gcr.
# tests-in-docker:
#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v4
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4

#     - name: Test with pytest in docker
#       run: |
#         docker volume create --name=gcp
#         docker compose run test

#     - name: Upload coverage reports to Codecov
#       uses: codecov/codecov-action@v4.0.1
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
